
Experiment no 3:


<!DOCTYPE html>
<html lang="en">

<head>
<meta charset="UTF-8">
<meta http-equiv="X-UA-Compatible" content="IE=edge">
<meta name="viewport" content="width=device-width, initial-scale=1.0">
<title>String programs</title>
</head>

<body>
<div>
<h1>Reverse String</h1>
<input type="text" id="reverse" placeholder="Enter String">
<button onclick="reverseString()">Reverse</button>

<h3 id="result1"></h3>
</div><br><br>

<div>
<h1>Replace characters of String</h1>
<h2>String : Welcome to Sinhgad</h2>
<input type="text" id="replace1" placeholder="Enter String">
<input type="text" id="replace2" placeholder="Enter String">
<button onclick="replaceString()">Replace</button>

<h3 id="result2"></h3>
</div><br><br>

<div>
<h1>Check Pallindrom of Strings</h1>
<input type="text" id="string1" placeholder="Enter String">
<button onclick="checkPall()">Check</button>

<h3 id="result3"></h3>
</div>

<script src="./script_exp_3.js"></script>

</body>
</html>






Script_exp_3.js file:

function reverseString() {
let str = document.getElementById("reverse").value;
let result = str.split("").reverse().join("");

document.getElementById(
"result1"
).innerHTML = `Reverse of ${str}: ${result}.`;
}

function replaceString() {
let string = "String : Welcome to Sinhgad";
let str1 = document.getElementById("replace1").value;
let str2 = document.getElementById("replace2").value;

let result = string.replace(str1, str2);

document.getElementById("result2").innerHTML = `Final string is: ${result}.`;
}

function checkPall() {
let str = document.getElementById("string1").value;

let rev = str.split("").reverse().join("");

if (str.toLowerCase() === rev.toLowerCase()) {
document.getElementById("result3").innerHTML = `The string is pallindrom.`;
} else {
document.getElementById(
"result3"
).innerHTML = `The string is not pallindrom.`;
}
}












Algorithm(Reverse) :-
1. Define a string to be reversed.
2. Find the length of the string.
3. Iterate through the string.
4. Append every character of string in the new string.
5. Cont. above steps till end point of the string.


Algorithm(Replace) :-
1. " " " for replacement.
2. Define match to be replaced
3.   "    pattern " " added.
4. Use replace() / replaceAll() method to replace match by pattern
5. Replace match by pattern by passing first parameter as a string as well as using regExp.
6. Display new string generated


Algorithm(Palindrome) :-
1. Define a string
2. Reverse given string using the above method
3. Compare the rev str with the given str
4. If both str are same it s palindrome
